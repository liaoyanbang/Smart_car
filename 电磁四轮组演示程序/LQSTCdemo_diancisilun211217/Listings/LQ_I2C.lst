C251 COMPILER V5.60.0,  LQ_I2C                                                             21/12/21  22:07:37  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE LQ_I2C
OBJECT MODULE PLACED IN .\Objects\LQ_I2C.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE user\LQ_I2C.c LARGE INTR2 BROWSE INCDIR(.\user;.\user\Dianci) DEBUG PR
                    -INT(.\Listings\LQ_I2C.lst) TABS(2) OBJECT(.\Objects\LQ_I2C.obj) 

stmt  level    source

    1          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    2          【平    台】北京龙邱智能科技STC16核心板
    3          【编    写】chiusir
    4          【E-mail  】chiusir@163.com
    5          【软件版本】V1.1 版权所有，单位使用请先联系授权
    6          【最后更新】2021年1月23日
    7          【相关信息参考下列地址】
    8          【网    站】http://www.lqist.cn
    9          【淘宝店铺】http://longqiu.taobao.com
   10          ------------------------------------------------
   11          【IDE】STC16
   12          【Target 】 C251Keil5.6及以上
   13          【SYS PLL】 30MHz使用内部晶振
   14          =================================================================
   15          STC16相关配套视频：
   16          龙邱科技B站网址：https://space.bilibili.com/95313236
   17          STC16环境下载参考视频： https://www.bilibili.com/video/BV1gy4y1p7T1/
   18          STC16一体板子介绍视频： https://www.bilibili.com/video/BV1Jy4y1e7R4/
   19          =================================================================
   20          下载时, 选择时钟 30MHZ (用户可自行修改频率).
   21          STC16F初次下载:先用IRCBND=0，ISP界面设置为24M，
   22          然后IRCBND=0，下载频率为30M；
   23          或者IRCBND=1，下载频率为30M；好用为准
   24          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
   25          #include "include.h"
   26          
   27          sbit SDA = P3^3;
   28          sbit SCL = P3^2;
   29          #define SLAW    0xA2
   30          #define SLAR    0xA3
   31          
   32          void I2C_init(void)
   33          {
   34   1        I2CCFG = 0xe0;                          //使能I2C主机模式
   35   1        I2CMSST = 0x00;
   36   1      }
   37          
   38          void Wait()
   39          {
   40   1        while (!(I2CMSST & 0x40));
   41   1        I2CMSST &= ~0x40;
   42   1      }
   43          
   44          void Start()
   45          {
   46   1        I2CMSCR = 0x01;                         //发送START命令
   47   1        Wait();
   48   1      }
   49          
   50          void SendData(char dat)
   51          {
   52   1        I2CTXD = dat;                           //写数据到数据缓冲区
   53   1        I2CMSCR = 0x02;                         //发送SEND命令
   54   1        Wait();
   55   1      }
   56          
   57          void RecvACK()
   58          {
C251 COMPILER V5.60.0,  LQ_I2C                                                             21/12/21  22:07:37  PAGE 2   

   59   1        I2CMSCR = 0x03;                         //发送读ACK命令
   60   1        Wait();
   61   1      }
   62          
   63          char RecvData()
   64          {
   65   1        I2CMSCR = 0x04;                         //发送RECV命令
   66   1        Wait();
   67   1        return I2CRXD;
   68   1      }
   69          
   70          void SendACK()
   71          {
   72   1        I2CMSST = 0x00;                         //设置ACK信号
   73   1        I2CMSCR = 0x05;                         //发送ACK命令
   74   1        Wait();
   75   1      }
   76          
   77          void SendNAK()
   78          {
   79   1        I2CMSST = 0x01;                         //设置NAK信号
   80   1        I2CMSCR = 0x05;                         //发送ACK命令
   81   1        Wait();
   82   1      }
   83          
   84          void Stop()
   85          {
   86   1        I2CMSCR = 0x06;                         //发送STOP命令
   87   1        Wait();
   88   1      }
   89          
   90          void WriteNbyte(u8 addr, u8 *p, u8 number)  /*  WordAddress,First Data Address,Byte lenth   */
   91          {
   92   1        Start();                                //发送起始命令
   93   1        SendData(SLAW);                         //发送设备地址+写命令
   94   1        RecvACK();
   95   1        SendData(addr);                         //发送存储地址
   96   1        RecvACK();
   97   1        do
   98   1        {
   99   2          SendData(*p++);
  100   2          RecvACK();
  101   2        }
  102   1        while(--number);
  103   1        Stop();                                 //发送停止命令
  104   1      }
  105          
  106          void ReadNbyte(u8 addr, u8 *p, u8 number)   /*  WordAddress,First Data Address,Byte lenth   */
  107          {
  108   1        Start();                                //发送起始命令
  109   1        SendData(SLAW);                         //发送设备地址+写命令
  110   1        RecvACK();
  111   1        SendData(addr);                         //发送存储地址
  112   1        RecvACK();
  113   1        Start();                                //发送起始命令
  114   1        SendData(SLAR);                         //发送设备地址+读命令
  115   1        RecvACK();
  116   1        do
  117   1        {
  118   2          *p = RecvData();
  119   2          p++;
  120   2          if(number != 1) SendACK();          //send ACK
  121   2        }
  122   1        while(--number);
  123   1        SendNAK();                              //send no ACK 
  124   1        Stop();                                 //发送停止命令
C251 COMPILER V5.60.0,  LQ_I2C                                                             21/12/21  22:07:37  PAGE 3   

  125   1      }
  126          /****************************/


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       336     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------          4
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
