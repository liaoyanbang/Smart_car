C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_IPS114_SPI
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_IPS114_SPI.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_IPS114_SPI.c XSMALL INTR2
                    - WARNINGLEVEL(3) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_per
                    -ipheral;..\CODE;..\USER\inc;..\USER\src;.\Out_File) DEBUG PRINT(.\Out_File\SEEKFREE_IPS114_SPI.lst) TABS(2) OBJECT(.\Out
                    -_File\SEEKFREE_IPS114_SPI.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file          main
   11           * @company       成都逐飞科技有限公司
   12           * @author        逐飞科技(QQ3184284598)
   13           * @version       查看doc内version文件 版本说明
   14           * @Software    MDK FOR C251 V5.60
   15           * @Taobao      https://seekfree.taobao.com/
   16           * @date          2019-11-15
   17           * @note    
   18                    接线定义：
   19                    ------------------------------------ 
   20                    1.14寸IPS模块管脚       单片机管脚
   21                    SCL                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_SCL   宏定义     硬件SPI引脚不可随意切换
   22                    SDA                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_SDA   宏定义     硬件SPI引脚不可随意切换
   23                    RES                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_REST_PIN宏定义    
   24                    DC                    查看SEEKFREE_IPS114_SPI.h文件内的IPS114_DC_PIN  宏定义  
   25                    CS                    查看SEEKFREE_IPS114_SPI.h文件内的IPS114_CS    宏定义     硬件SPI引脚不可随意切换
   26                    BL            查看SEEKFREE_IPS114_SPI.h文件内的IPS114_BL_PIN  宏定义
   27                    
   28                    电源引脚
   29                    VCC 3.3V电源
   30                    GND 电源地
   31                    最大分辨率135*240
   32                    ------------------------------------ 
   33           ********************************************************************************************************
             -************/
   34           
   35          
   36          
   37          
   38          #include "SEEKFREE_IPS114_SPI.h"
   39          #include "SEEKFREE_FONT.h"
   40          #include "SEEKFREE_PRINTF.h"
   41          #include "zf_spi.h"
   42          #include "zf_delay.h"
   43          
   44          
   45          
   46          
   47          //-------------------------------------------------------------------------------------------------------
             -------------
   48          //  以下函数是使用软件SPI通信，相比较硬件SPI，软件SPI引脚更加灵活，可以使用任意普通IO
   49          //-------------------------------------------------------------------------------------------------------
             -------------
   50          
   51          
   52          
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 2   

   53          //-------------------------------------------------------------------------------------------------------
             -------------
   54          //  @brief      内部调用，用户无需关心
   55          //  @param      void        
   56          //  @return             
   57          //  @since      v1.0
   58          //  Sample usage:               
   59          //-------------------------------------------------------------------------------------------------------
             -------------
   60          void ips114_writeIndex_simspi(uint8 dat)      //写命令
   61          { 
   62   1        uint8 i = 8;
   63   1        IPS114_CS_SIMSPI(0);
   64   1          IPS114_DC_SIMSPI(0);
   65   1      
   66   1        IPS114_SCL_SIMSPI(0);
   67   1      
   68   1        while(i--)
   69   1        {
   70   2          if(dat&0x80){IPS114_SDA_SIMSPI(1);}
   71   2          else{IPS114_SDA_SIMSPI(0);}
   72   2          IPS114_SCL_SIMSPI(1);
   73   2      
   74   2          IPS114_SCL_SIMSPI(0);
   75   2          dat<<=1;
   76   2        } 
   77   1        IPS114_CS_SIMSPI(1);
   78   1      }
   79          
   80          //-------------------------------------------------------------------------------------------------------
             -------------
   81          //  @brief      内部调用，用户无需关心
   82          //  @param      void        
   83          //  @return             
   84          //  @since      v1.0
   85          //  Sample usage:               
   86          //-------------------------------------------------------------------------------------------------------
             -------------
   87          void ips114_writeData_simspi(uint8 dat)     //写数据
   88          {
   89   1        uint8 i = 8;
   90   1        IPS114_CS_SIMSPI(0);
   91   1          IPS114_DC_SIMSPI(1);
   92   1      
   93   1        IPS114_SCL_SIMSPI(0);
   94   1      
   95   1        while(i--)
   96   1        {
   97   2          if(dat&0x80){IPS114_SDA_SIMSPI(1);}
   98   2          else{IPS114_SDA_SIMSPI(0);}
   99   2          IPS114_SCL_SIMSPI(1);
  100   2      
  101   2          IPS114_SCL_SIMSPI(0);
  102   2          dat<<=1;
  103   2        } 
  104   1        IPS114_CS_SIMSPI(1);
  105   1      }
  106          
  107          //-------------------------------------------------------------------------------------------------------
             -------------
  108          //  @brief      内部调用，用户无需关心
  109          //  @param      void        
  110          //  @return             
  111          //  @since      v1.0
  112          //  Sample usage:               
  113          //-------------------------------------------------------------------------------------------------------
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 3   

             -------------
  114          void ips114_writeDatai_16bit_simspi(uint16 dat) //向液晶屏写一个16位数据
  115          {
  116   1          uint8 i=16;
  117   1        IPS114_CS_SIMSPI(0);
  118   1          IPS114_DC_SIMSPI(1);
  119   1          IPS114_SCL_SIMSPI(0);
  120   1        while(i--)
  121   1        {
  122   2            if(dat&0x8000){IPS114_SDA_SIMSPI(1);}
  123   2            else{IPS114_SDA_SIMSPI(0);}
  124   2            IPS114_SCL_SIMSPI(1);
  125   2          
  126   2            IPS114_SCL_SIMSPI(0);
  127   2            dat<<=1;
  128   2        }
  129   1        IPS114_CS_SIMSPI(1);
  130   1      }
  131          
  132          //-------------------------------------------------------------------------------------------------------
             -------------
  133          //  @brief      1.14寸 IPS液晶初始化
  134          //  @return     void
  135          //  @since      v1.0
  136          //  Sample usage:               
  137          //-------------------------------------------------------------------------------------------------------
             -------------
  138          void ips114_init_simspi(void)
  139          {
  140   1          
  141   1        IPS114_BL_SIMSPI(1);
  142   1        IPS114_DC_SIMSPI(0);
  143   1        IPS114_REST_SIMSPI(0);
  144   1        
  145   1          delay_ms(200);
  146   1          
  147   1          IPS114_REST_SIMSPI(1);
  148   1          delay_ms(100);
  149   1        
  150   1          ips114_writeIndex_simspi(0x36);
  151   1          
  152   1          #if (IPS114_DISPLAY_DIR==0)    
                   ips114_writeData_simspi(0x00);
                   #elif (IPS114_DISPLAY_DIR==1)    
                   ips114_writeData_simspi(0xC0);
                   #elif (IPS114_DISPLAY_DIR==2)    
                   ips114_writeData_simspi(0x70);
                   #else                             
  159   1          ips114_writeData_simspi(0xA0);
  160   1          #endif
  161   1          ips114_writeIndex_simspi(0x3A); 
  162   1          ips114_writeData_simspi(0x05);
  163   1      
  164   1          ips114_writeIndex_simspi(0xB2);
  165   1          ips114_writeData_simspi(0x0C);
  166   1          ips114_writeData_simspi(0x0C);
  167   1          ips114_writeData_simspi(0x00);
  168   1          ips114_writeData_simspi(0x33);
  169   1          ips114_writeData_simspi(0x33); 
  170   1      
  171   1          ips114_writeIndex_simspi(0xB7); 
  172   1          ips114_writeData_simspi(0x35);  
  173   1      
  174   1          ips114_writeIndex_simspi(0xBB);
  175   1          ips114_writeData_simspi(0x37);
  176   1      
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 4   

  177   1          ips114_writeIndex_simspi(0xC0);
  178   1          ips114_writeData_simspi(0x2C);
  179   1      
  180   1          ips114_writeIndex_simspi(0xC2);
  181   1          ips114_writeData_simspi(0x01);
  182   1      
  183   1          ips114_writeIndex_simspi(0xC3);
  184   1          ips114_writeData_simspi(0x12);   
  185   1      
  186   1          ips114_writeIndex_simspi(0xC4);
  187   1          ips114_writeData_simspi(0x20);  
  188   1      
  189   1          ips114_writeIndex_simspi(0xC6); 
  190   1          ips114_writeData_simspi(0x0F);    
  191   1      
  192   1          ips114_writeIndex_simspi(0xD0); 
  193   1          ips114_writeData_simspi(0xA4);
  194   1          ips114_writeData_simspi(0xA1);
  195   1      
  196   1          ips114_writeIndex_simspi(0xE0);
  197   1          ips114_writeData_simspi(0xD0);
  198   1          ips114_writeData_simspi(0x04);
  199   1          ips114_writeData_simspi(0x0D);
  200   1          ips114_writeData_simspi(0x11);
  201   1          ips114_writeData_simspi(0x13);
  202   1          ips114_writeData_simspi(0x2B);
  203   1          ips114_writeData_simspi(0x3F);
  204   1          ips114_writeData_simspi(0x54);
  205   1          ips114_writeData_simspi(0x4C);
  206   1          ips114_writeData_simspi(0x18);
  207   1          ips114_writeData_simspi(0x0D);
  208   1          ips114_writeData_simspi(0x0B);
  209   1          ips114_writeData_simspi(0x1F);
  210   1          ips114_writeData_simspi(0x23);
  211   1      
  212   1          ips114_writeIndex_simspi(0xE1);
  213   1          ips114_writeData_simspi(0xD0);
  214   1          ips114_writeData_simspi(0x04);
  215   1          ips114_writeData_simspi(0x0C);
  216   1          ips114_writeData_simspi(0x11);
  217   1          ips114_writeData_simspi(0x13);
  218   1          ips114_writeData_simspi(0x2C);
  219   1          ips114_writeData_simspi(0x3F);
  220   1          ips114_writeData_simspi(0x44);
  221   1          ips114_writeData_simspi(0x51);
  222   1          ips114_writeData_simspi(0x2F);
  223   1          ips114_writeData_simspi(0x1F);
  224   1          ips114_writeData_simspi(0x1F);
  225   1          ips114_writeData_simspi(0x20);
  226   1          ips114_writeData_simspi(0x23);
  227   1      
  228   1          ips114_writeIndex_simspi(0x21); 
  229   1      
  230   1          ips114_writeIndex_simspi(0x11); 
  231   1          delay_ms(120); 
  232   1      
  233   1          ips114_writeIndex_simspi(0x29);
  234   1          ips114_clear_simspi(IPS114_BGCOLOR);
  235   1      }
  236          
  237          
  238          
  239          void ips114_set_region_simspi(uint16 x1,uint16 y1,uint16 x2,uint16 y2)
  240          {
  241   1        #if(IPS114_DISPLAY_DIR==0)
                 {
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 5   

                   ips114_writeIndex_simspi(0x2a);//列地址设置
                   ips114_writeDatai_16bit_simspi(x1+52);
                   ips114_writeDatai_16bit_simspi(x2+52);
                   ips114_writeIndex_simspi(0x2b);//行地址设置
                   ips114_writeDatai_16bit_simspi(y1+40);
                   ips114_writeDatai_16bit_simspi(y2+40);
                   ips114_writeIndex_simspi(0x2c);//储存器写
                 }
                 #elif(IPS114_DISPLAY_DIR==1)
                 {
                   ips114_writeIndex_simspi(0x2a);//列地址设置
                   ips114_writeDatai_16bit_simspi(x1+53);
                   ips114_writeDatai_16bit_simspi(x2+53);
                   ips114_writeIndex_simspi(0x2b);//行地址设置
                   ips114_writeDatai_16bit_simspi(y1+40);
                   ips114_writeDatai_16bit_simspi(y2+40);
                   ips114_writeIndex_simspi(0x2c);//储存器写
                 }
                 #elif(IPS114_DISPLAY_DIR==2)
                 {
                   ips114_writeIndex_simspi(0x2a);//列地址设置
                   ips114_writeDatai_16bit_simspi(x1+40);
                   ips114_writeDatai_16bit_simspi(x2+40);
                   ips114_writeIndex_simspi(0x2b);//行地址设置
                   ips114_writeDatai_16bit_simspi(y1+53);
                   ips114_writeDatai_16bit_simspi(y2+53);
                   ips114_writeIndex_simspi(0x2c);//储存器写
                 }
                 #else
  272   1        {
  273   2          ips114_writeIndex_simspi(0x2a);//列地址设置
  274   2          ips114_writeDatai_16bit_simspi(x1+40);
  275   2          ips114_writeDatai_16bit_simspi(x2+40);
  276   2          ips114_writeIndex_simspi(0x2b);//行地址设置
  277   2          ips114_writeDatai_16bit_simspi(y1+52);
  278   2          ips114_writeDatai_16bit_simspi(y2+52);
  279   2          ips114_writeIndex_simspi(0x2c);//储存器写
  280   2        }
  281   1        #endif
  282   1      }
  283          
  284          //-------------------------------------------------------------------------------------------------------
             -------------
  285          //  @brief      液晶清屏函数
  286          //  @param      color         颜色设置
  287          //  @return     void
  288          //  @since      v1.0
  289          //  Sample usage:               ips114_clear(YELLOW);// 全屏设置为黄色
  290          //-------------------------------------------------------------------------------------------------------
             -------------
  291          void ips114_clear_simspi(uint16 color)
  292          {
  293   1          uint16 i,j;
  294   1        ips114_set_region_simspi(0,0,IPS114_X_MAX-1,IPS114_Y_MAX-1);
  295   1          for(i=0;i<IPS114_X_MAX;i++)
  296   1          {
  297   2              for (j=0;j<IPS114_Y_MAX;j++)
  298   2            {
  299   3                ips114_writeDatai_16bit_simspi(color);         
  300   3            }
  301   2          }
  302   1      }
  303          
  304          //-------------------------------------------------------------------------------------------------------
             -------------
  305          //  @brief      液晶画点
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 6   

  306          //  @param      x               坐标x方向的起点
  307          //  @param      y               坐标y方向的起点
  308          //  @param      dat             需要显示的颜色
  309          //  @return     void
  310          //  @since      v1.0
  311          //  Sample usage:               ips114_drawpoint(0,0,RED);  //坐标0,0画一个红色的点
  312          //-------------------------------------------------------------------------------------------------------
             -------------
  313          void ips114_drawpoint_simspi(uint16 x,uint16 y,uint16 color)
  314          {
  315   1          ips114_set_region_simspi(x,y,x,y);
  316   1          ips114_writeDatai_16bit_simspi(color);
  317   1      }
  318          
  319          
  320          
  321          //-------------------------------------------------------------------------------------------------------
             -------------
  322          //  @brief      液晶显示字符
  323          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  324          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  325          //  @param      dat             需要显示的字符
  326          //  @return     void
  327          //  @since      v1.0
  328          //  Sample usage:               ips114_showchar(0,0,'x');//坐标0,0写一个字符x
  329          //-------------------------------------------------------------------------------------------------------
             -------------
  330          void ips114_showchar_simspi(uint16 x,uint16 y,const int8 dat)
  331          {
  332   1        uint8 i,j;
  333   1        uint8 temp;
  334   1          
  335   1        for(i=0; i<16; i++)
  336   1        {
  337   2          ips114_set_region_simspi(x,y+i,x+7,y+i);
  338   2          temp = tft_ascii[dat-32][i];//减32因为是取模是从空格开始取得 空格在ascii中序号是32
  339   2          for(j=0; j<8; j++)
  340   2          {
  341   3            if(temp&0x01) 
  342   3                  {
  343   4                      ips114_writeDatai_16bit_simspi(IPS114_PENCOLOR);
  344   4                  }
  345   3            else      ips114_writeDatai_16bit_simspi(IPS114_BGCOLOR);
  346   3            temp>>=1;
  347   3          }
  348   2        }
  349   1      }
  350          
  351          //-------------------------------------------------------------------------------------------------------
             -------------
  352          //  @brief      液晶显示字符串
  353          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
  354          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
  355          //  @param      dat             需要显示的字符串
  356          //  @return     void
  357          //  @since      v1.0
  358          //  Sample usage:               ips114_showstr(0,0,"seekfree");
  359          //-------------------------------------------------------------------------------------------------------
             -------------
  360          void ips114_showstr_simspi(uint16 x,uint16 y,const int8 dat[])
  361          {
  362   1        uint16 j;
  363   1        
  364   1        j = 0;
  365   1        while(dat[j] != '\0')
  366   1        {
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 7   

  367   2          ips114_showchar_simspi(x+8*j,y*16,dat[j]);
  368   2          j++;
  369   2        }
  370   1      }
  371          
  372          //-------------------------------------------------------------------------------------------------------
             -------------
  373          //  @brief      液晶显示8位有符号
  374          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
  375          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
  376          //  @param      dat             需要显示的变量，数据类型int8
  377          //  @return     void
  378          //  @since      v1.0
  379          //  Sample usage:               ips114_showint8(0,0,x);//x为int8类型
  380          //-------------------------------------------------------------------------------------------------------
             -------------
  381          void ips114_showint8_simspi(uint16 x,uint16 y,int8 dat)
  382          {
  383   1        uint8 a[3];
  384   1        uint8 i;
  385   1        if(dat<0)
  386   1        {
  387   2          ips114_showchar_simspi(x,y*16,'-');
  388   2          dat = -dat;
  389   2        }
  390   1        else  ips114_showchar_simspi(x,y*16,' ');
  391   1        
  392   1        a[0] = dat/100;
  393   1        a[1] = dat/10%10;
  394   1        a[2] = dat%10;
  395   1        i = 0;
  396   1        while(i<3)
  397   1        {
  398   2          ips114_showchar_simspi((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  399   2          i++;
  400   2        }
  401   1      }
  402          
  403          //-------------------------------------------------------------------------------------------------------
             -------------
  404          //  @brief      液晶显示8位无符号
  405          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  406          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  407          //  @param      dat             需要显示的变量，数据类型uint8
  408          //  @return     void
  409          //  @since      v1.0
  410          //  Sample usage:               ips114_showuint8(0,0,x);//x为uint8类型
  411          //-------------------------------------------------------------------------------------------------------
             -------------
  412          void ips114_showuint8_simspi(uint16 x,uint16 y,uint8 dat)
  413          {
  414   1        uint8 a[3];
  415   1        uint8 i;
  416   1        
  417   1        a[0] = dat/100;
  418   1        a[1] = dat/10%10;
  419   1        a[2] = dat%10;
  420   1        i = 0;
  421   1        while(i<3)
  422   1        {
  423   2          ips114_showchar_simspi((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  424   2          i++;
  425   2        }
  426   1        
  427   1      }
  428          
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 8   

  429          //-------------------------------------------------------------------------------------------------------
             -------------
  430          //  @brief      液晶显示16位有符号
  431          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  432          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  433          //  @param      dat             需要显示的变量，数据类型int16
  434          //  @return     void
  435          //  @since      v1.0
  436          //  Sample usage:               ips114_showint16(0,0,x);//x为int16类型
  437          //-------------------------------------------------------------------------------------------------------
             -------------
  438          void ips114_showint16_simspi(uint16 x,uint16 y,int16 dat)
  439          {
  440   1        uint8 a[5];
  441   1        uint8 i;
  442   1        if(dat<0)
  443   1        {
  444   2          ips114_showchar_simspi(x,y*16,'-');
  445   2          dat = -dat;
  446   2        }
  447   1        else  ips114_showchar_simspi(x,y*16,' ');
  448   1      
  449   1        a[0] = dat/10000;
  450   1        a[1] = dat/1000%10;
  451   1        a[2] = dat/100%10;
  452   1        a[3] = dat/10%10;
  453   1        a[4] = dat%10;
  454   1        
  455   1        i = 0;
  456   1        while(i<5)
  457   1        {
  458   2          ips114_showchar_simspi((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  459   2          i++;
  460   2        }
  461   1      }
  462          
  463          //-------------------------------------------------------------------------------------------------------
             -------------
  464          //  @brief      液晶显示16位无符号
  465          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  466          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  467          //  @param      dat             需要显示的变量，数据类型uint16
  468          //  @return     void
  469          //  @since      v1.0
  470          //  Sample usage:               ips114_showuint16(0,0,x);//x为uint16类型
  471          //-------------------------------------------------------------------------------------------------------
             -------------
  472          void ips114_showuint16_simspi(uint16 x,uint16 y,uint16 dat)
  473          {
  474   1        uint8 a[5];
  475   1        uint8 i;
  476   1      
  477   1        a[0] = dat/10000;
  478   1        a[1] = dat/1000%10;
  479   1        a[2] = dat/100%10;
  480   1        a[3] = dat/10%10;
  481   1        a[4] = dat%10;
  482   1        
  483   1        i = 0;
  484   1        while(i<5)
  485   1        {
  486   2          ips114_showchar_simspi((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  487   2          i++;
  488   2        }
  489   1      }
  490          
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 9   

  491          //-------------------------------------------------------------------------------------------------------
             -------------
  492          //  @brief      液晶显示32位有符号(去除整数部分无效的0)
  493          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  494          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  495          //  @param      dat             需要显示的变量，数据类型uint32
  496          //  @param      num             需要显示的位数 最高10位  不包含正负号
  497          //  @return     void
  498          //  @since      v1.0
  499          //  Sample usage:               ips114_showuint32(0,0,x,3);//x可以为int32 uint16 int16 uint8 int8类型
  500          //  Sample usage:               负数会显示一个 ‘-’号   正数显示一个空格
  501          //-------------------------------------------------------------------------------------------------------
             -------------
  502          void ips114_showint32_simspi(uint16 x,uint16 y,int32 dat,uint8 num)
  503          {
  504   1          int8    buff[34];
  505   1          uint8   length;
  506   1          
  507   1          if(10<num)      num = 10;
  508   1          
  509   1          num++;
  510   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
  511   1          else
  512   1          {
  513   2              buff[0] = ' ';
  514   2              length = zf_sprintf( &buff[1],"%d",dat);
  515   2              length++;
  516   2          }
  517   1          while(length < num)
  518   1          {
  519   2              buff[length] = ' ';
  520   2              length++;
  521   2          }
  522   1          buff[num] = '\0';
  523   1      
  524   1          ips114_showstr_simspi(x, y, buff);  //显示数字
  525   1      }
  526          
  527          
  528          //-------------------------------------------------------------------------------------------------------
             -------------
  529          //  @brief      液晶显示浮点数(去除整数部分无效的0)
  530          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  531          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  532          //  @param      dat             需要显示的变量，数据类型float或double
  533          //  @param      num             整数位显示长度   最高10位  
  534          //  @param      pointnum        小数位显示长度   最高6位
  535          //  @return     void
  536          //  @since      v1.0
  537          //  Sample usage:               ips114_showfloat(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
  538          //  @note                       特别注意当发现小数部分显示的值与你写入的值不一样的时候，
  539          //                              可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
  540          //                              有关问题的详情，请自行百度学习   浮点数精度丢失问题。
  541          //                              负数会显示一个 ‘-’号   正数显示一个空格
  542          //-------------------------------------------------------------------------------------------------------
             -------------
  543          void ips114_showfloat_simspi(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
  544          {
  545   1          uint8   length;
  546   1        int8    buff[34];
  547   1        int8    start,end,point;
  548   1      
  549   1        if(6<pointnum)  pointnum = 6;
  550   1          if(10<num)      num = 10;
  551   1              
  552   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 10  

  553   1          else
  554   1          {
  555   2              length = zf_sprintf( &buff[1],"%f",dat);
  556   2              length++;
  557   2          }
  558   1          point = length - 7;         //计算小数点位置
  559   1          start = point - num - 1;    //计算起始位
  560   1          end = point + pointnum + 1; //计算结束位
  561   1          while(0>start)//整数位不够  末尾应该填充空格
  562   1          {
  563   2              buff[end] = ' ';
  564   2              end++;
  565   2              start++;
  566   2          }
  567   1          
  568   1          if(0>dat)   buff[start] = '-';
  569   1          else        buff[start] = ' ';
  570   1          
  571   1          buff[end] = '\0';
  572   1      
  573   1          ips114_showstr_simspi(x, y, buff);  //显示数字
  574   1      }
  575          
  576          
  577          
  578          
  579          //-------------------------------------------------------------------------------------------------------
             -------------
  580          //  以下函数是使用硬件SPI通信，相比较软件IIC，速度比软件IIC快。
  581          //-------------------------------------------------------------------------------------------------------
             -------------
  582          
  583          
  584          
  585          
  586          //-------------------------------------------------------------------------------------------------------
             -------------
  587          //  @brief      内部调用，用户无需关心
  588          //  @param      void        
  589          //  @return             
  590          //  @since      v1.0
  591          //  Sample usage:               
  592          //-------------------------------------------------------------------------------------------------------
             -------------
  593          void ips114_writeIndex(uint8 dat)     //写命令
  594          { 
  595   1        IPS114_CS(0);
  596   1          IPS114_DC(0);
  597   1      
  598   1        spi_mosi(dat);
  599   1        IPS114_CS(1);
  600   1      }
  601          
  602          //-------------------------------------------------------------------------------------------------------
             -------------
  603          //  @brief      内部调用，用户无需关心
  604          //  @param      void        
  605          //  @return             
  606          //  @since      v1.0
  607          //  Sample usage:               
  608          //-------------------------------------------------------------------------------------------------------
             -------------
  609          void ips114_writeData(uint8 dat)      //写数据
  610          {
  611   1        IPS114_CS(0);
  612   1          IPS114_DC(1);
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 11  

  613   1      
  614   1        spi_mosi(dat);
  615   1        IPS114_CS(1);
  616   1      }
  617          
  618          //-------------------------------------------------------------------------------------------------------
             -------------
  619          //  @brief      内部调用，用户无需关心
  620          //  @param      void        
  621          //  @return             
  622          //  @since      v1.0
  623          //  Sample usage:               
  624          //-------------------------------------------------------------------------------------------------------
             -------------
  625          void ips114_writedata_16bit(uint16 dat) //向液晶屏写一个16位数据
  626          {
  627   1          uint8 dat1[2];
  628   1          dat1[0] = dat >> 8;
  629   1          dat1[1] = (uint8)dat;
  630   1        IPS114_CS(0);
  631   1          IPS114_DC(1);
  632   1        spi_mosi(dat1[0]);  //写入数据  高位在前  低位在后
  633   1        spi_mosi(dat1[1]);
  634   1        IPS114_CS(1);
  635   1      }
  636          
  637          //-------------------------------------------------------------------------------------------------------
             -------------
  638          //  @brief      1.14寸 IPS液晶初始化
  639          //  @return     void
  640          //  @since      v1.0
  641          //  Sample usage:               
  642          //-------------------------------------------------------------------------------------------------------
             -------------
  643          void ips114_init(void)
  644          {
  645   1          spi_init(IPS114_SPIN_PIN, IPS114_SCL_PIN, IPS114_SDA_PIN, IPS114_SDA_IN_PIN, 0, MASTER, SPI_SYSclk_DI
             -V_4);
  646   1      
  647   1        IPS114_BL(1);
  648   1        IPS114_DC(0);
  649   1        IPS114_REST(0);
  650   1        
  651   1          delay_ms(200);
  652   1          
  653   1          IPS114_REST(1);
  654   1          delay_ms(100);
  655   1        
  656   1          ips114_writeIndex(0x36);
  657   1          
  658   1          #if (IPS114_DISPLAY_DIR==0)    
                   ips114_writeData(0x00);
                   #elif (IPS114_DISPLAY_DIR==1)    
                   ips114_writeData(0xC0);
                   #elif (IPS114_DISPLAY_DIR==2)    
                   ips114_writeData(0x70);
                   #else                            
  665   1          ips114_writeData(0xA0);
  666   1          #endif
  667   1        
  668   1          ips114_writeIndex(0x3A); 
  669   1          ips114_writeData(0x05);
  670   1      
  671   1          ips114_writeIndex(0xB2);
  672   1          ips114_writeData(0x0C);
  673   1          ips114_writeData(0x0C);
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 12  

  674   1          ips114_writeData(0x00);
  675   1          ips114_writeData(0x33);
  676   1          ips114_writeData(0x33); 
  677   1      
  678   1          ips114_writeIndex(0xB7); 
  679   1          ips114_writeData(0x35);  
  680   1      
  681   1          ips114_writeIndex(0xBB);
  682   1          ips114_writeData(0x37);
  683   1      
  684   1          ips114_writeIndex(0xC0);
  685   1          ips114_writeData(0x2C);
  686   1      
  687   1          ips114_writeIndex(0xC2);
  688   1          ips114_writeData(0x01);
  689   1      
  690   1          ips114_writeIndex(0xC3);
  691   1          ips114_writeData(0x12);   
  692   1      
  693   1          ips114_writeIndex(0xC4);
  694   1          ips114_writeData(0x20);  
  695   1      
  696   1          ips114_writeIndex(0xC6); 
  697   1          ips114_writeData(0x0F);    
  698   1      
  699   1          ips114_writeIndex(0xD0); 
  700   1          ips114_writeData(0xA4);
  701   1          ips114_writeData(0xA1);
  702   1      
  703   1          ips114_writeIndex(0xE0);
  704   1          ips114_writeData(0xD0);
  705   1          ips114_writeData(0x04);
  706   1          ips114_writeData(0x0D);
  707   1          ips114_writeData(0x11);
  708   1          ips114_writeData(0x13);
  709   1          ips114_writeData(0x2B);
  710   1          ips114_writeData(0x3F);
  711   1          ips114_writeData(0x54);
  712   1          ips114_writeData(0x4C);
  713   1          ips114_writeData(0x18);
  714   1          ips114_writeData(0x0D);
  715   1          ips114_writeData(0x0B);
  716   1          ips114_writeData(0x1F);
  717   1          ips114_writeData(0x23);
  718   1      
  719   1          ips114_writeIndex(0xE1);
  720   1          ips114_writeData(0xD0);
  721   1          ips114_writeData(0x04);
  722   1          ips114_writeData(0x0C);
  723   1          ips114_writeData(0x11);
  724   1          ips114_writeData(0x13);
  725   1          ips114_writeData(0x2C);
  726   1          ips114_writeData(0x3F);
  727   1          ips114_writeData(0x44);
  728   1          ips114_writeData(0x51);
  729   1          ips114_writeData(0x2F);
  730   1          ips114_writeData(0x1F);
  731   1          ips114_writeData(0x1F);
  732   1          ips114_writeData(0x20);
  733   1          ips114_writeData(0x23);
  734   1      
  735   1          ips114_writeIndex(0x21); 
  736   1      
  737   1          ips114_writeIndex(0x11); 
  738   1          delay_ms(120); 
  739   1      
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 13  

  740   1          ips114_writeIndex(0x29);
  741   1          ips114_clear(IPS114_BGCOLOR);
  742   1      }
  743          
  744          
  745          
  746          void ips114_set_region(uint16 x1,uint16 y1,uint16 x2,uint16 y2)
  747          {
  748   1        #if(IPS114_DISPLAY_DIR==0)
                 {
                   ips114_writeIndex(0x2a);//列地址设置
                   ips114_writedata_16bit(x1+52);
                   ips114_writedata_16bit(x2+52);
                   ips114_writeIndex(0x2b);//行地址设置
                   ips114_writedata_16bit(y1+40);
                   ips114_writedata_16bit(y2+40);
                   ips114_writeIndex(0x2c);//储存器写
                 }
                 #elif(IPS114_DISPLAY_DIR==1)
                 {
                   ips114_writeIndex(0x2a);//列地址设置
                   ips114_writedata_16bit(x1+53);
                   ips114_writedata_16bit(x2+53);
                   ips114_writeIndex(0x2b);//行地址设置
                   ips114_writedata_16bit(y1+40);
                   ips114_writedata_16bit(y2+40);
                   ips114_writeIndex(0x2c);//储存器写
                 }
                 #elif(IPS114_DISPLAY_DIR==2)
                 {
                   ips114_writeIndex(0x2a);//列地址设置
                   ips114_writedata_16bit(x1+40);
                   ips114_writedata_16bit(x2+40);
                   ips114_writeIndex(0x2b);//行地址设置
                   ips114_writedata_16bit(y1+53);
                   ips114_writedata_16bit(y2+53);
                   ips114_writeIndex(0x2c);//储存器写
                 }
                 #else
  779   1        {
  780   2          ips114_writeIndex(0x2a);//列地址设置
  781   2          ips114_writedata_16bit(x1+40);
  782   2          ips114_writedata_16bit(x2+40);
  783   2          ips114_writeIndex(0x2b);//行地址设置
  784   2          ips114_writedata_16bit(y1+52);
  785   2          ips114_writedata_16bit(y2+52);
  786   2          ips114_writeIndex(0x2c);//储存器写
  787   2        }
  788   1        #endif
  789   1      }
  790          
  791          //-------------------------------------------------------------------------------------------------------
             -------------
  792          //  @brief      液晶清屏函数
  793          //  @param      color         颜色设置
  794          //  @return     void
  795          //  @since      v1.0
  796          //  Sample usage:               ips114_clear(YELLOW);// 全屏设置为黄色
  797          //-------------------------------------------------------------------------------------------------------
             -------------
  798          void ips114_clear(uint16 color)
  799          {
  800   1          uint16 i,j;
  801   1        ips114_set_region(0,0,IPS114_X_MAX-1,IPS114_Y_MAX-1);
  802   1          for(i=0;i<IPS114_X_MAX;i++)
  803   1          {
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 14  

  804   2              for (j=0;j<IPS114_Y_MAX;j++)
  805   2            {
  806   3                ips114_writedata_16bit(color);         
  807   3            }
  808   2          }
  809   1      }
  810          
  811          //-------------------------------------------------------------------------------------------------------
             -------------
  812          //  @brief      液晶画点
  813          //  @param      x               坐标x方向的起点
  814          //  @param      y               坐标y方向的起点
  815          //  @param      dat             需要显示的颜色
  816          //  @return     void
  817          //  @since      v1.0
  818          //  Sample usage:               ips114_drawpoint(0,0,RED);  //坐标0,0画一个红色的点
  819          //-------------------------------------------------------------------------------------------------------
             -------------
  820          void ips114_drawpoint(uint16 x,uint16 y,uint16 color)
  821          {
  822   1          ips114_set_region(x,y,x,y);
  823   1          ips114_writedata_16bit(color);
  824   1      }
  825          
  826          
  827          
  828          //-------------------------------------------------------------------------------------------------------
             -------------
  829          //  @brief      液晶显示字符
  830          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  831          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  832          //  @param      dat             需要显示的字符
  833          //  @return     void
  834          //  @since      v1.0
  835          //  Sample usage:               ips114_showchar(0,0,'x');//坐标0,0写一个字符x
  836          //-------------------------------------------------------------------------------------------------------
             -------------
  837          void ips114_showchar(uint16 x,uint16 y,const int8 dat)
  838          {
  839   1        uint8 i,j;
  840   1        uint8 temp;
  841   1          
  842   1        for(i=0; i<16; i++)
  843   1        {
  844   2          ips114_set_region(x,y+i,x+7,y+i);
  845   2          temp = tft_ascii[dat-32][i];//减32因为是取模是从空格开始取得 空格在ascii中序号是32
  846   2          for(j=0; j<8; j++)
  847   2          {
  848   3            if(temp&0x01) 
  849   3                  {
  850   4                      ips114_writedata_16bit(IPS114_PENCOLOR);
  851   4                  }
  852   3            else      ips114_writedata_16bit(IPS114_BGCOLOR);
  853   3            temp>>=1;
  854   3          }
  855   2        }
  856   1      }
  857          
  858          //-------------------------------------------------------------------------------------------------------
             -------------
  859          //  @brief      液晶显示字符串
  860          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
  861          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
  862          //  @param      dat             需要显示的字符串
  863          //  @return     void
  864          //  @since      v1.0
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 15  

  865          //  Sample usage:               ips114_showstr(0,0,"seekfree");
  866          //-------------------------------------------------------------------------------------------------------
             -------------
  867          void ips114_showstr(uint16 x,uint16 y,const int8 dat[])
  868          {
  869   1        uint16 j;
  870   1        
  871   1        j = 0;
  872   1        while(dat[j] != '\0')
  873   1        {
  874   2          ips114_showchar(x+8*j,y*16,dat[j]);
  875   2          j++;
  876   2        }
  877   1      }
  878          
  879          //-------------------------------------------------------------------------------------------------------
             -------------
  880          //  @brief      液晶显示8位有符号
  881          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
  882          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
  883          //  @param      dat             需要显示的变量，数据类型int8
  884          //  @return     void
  885          //  @since      v1.0
  886          //  Sample usage:               ips114_showint8(0,0,x);//x为int8类型
  887          //-------------------------------------------------------------------------------------------------------
             -------------
  888          void ips114_showint8(uint16 x,uint16 y,int8 dat)
  889          {
  890   1        uint8 a[3];
  891   1        uint8 i;
  892   1        if(dat<0)
  893   1        {
  894   2          ips114_showchar(x,y*16,'-');
  895   2          dat = -dat;
  896   2        }
  897   1        else  ips114_showchar(x,y*16,' ');
  898   1        
  899   1        a[0] = dat/100;
  900   1        a[1] = dat/10%10;
  901   1        a[2] = dat%10;
  902   1        i = 0;
  903   1        while(i<3)
  904   1        {
  905   2          ips114_showchar((uint16)(x+(8*(i+1))), (uint16)(y*16),(int8)('0' + a[i]));
  906   2          i++;
  907   2        }
  908   1      }
  909          
  910          //-------------------------------------------------------------------------------------------------------
             -------------
  911          //  @brief      液晶显示8位无符号
  912          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  913          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  914          //  @param      dat             需要显示的变量，数据类型uint8
  915          //  @return     void
  916          //  @since      v1.0
  917          //  Sample usage:               ips114_showuint8(0,0,x);//x为uint8类型
  918          //-------------------------------------------------------------------------------------------------------
             -------------
  919          void ips114_showuint8(uint16 x,uint16 y,uint8 dat)
  920          {
  921   1        uint8 a[3];
  922   1        uint8 i;
  923   1        
  924   1        a[0] = dat/100;
  925   1        a[1] = dat/10%10;
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 16  

  926   1        a[2] = dat%10;
  927   1        i = 0;
  928   1        while(i<3)
  929   1        {
  930   2          ips114_showchar((uint16)(x+(8*(i+1))), (uint16)(y*16),(int8)('0' + a[i]));
  931   2          i++;
  932   2        }
  933   1        
  934   1      }
  935          
  936          //-------------------------------------------------------------------------------------------------------
             -------------
  937          //  @brief      液晶显示16位有符号
  938          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  939          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  940          //  @param      dat             需要显示的变量，数据类型int16
  941          //  @return     void
  942          //  @since      v1.0
  943          //  Sample usage:               ips114_showint16(0,0,x);//x为int16类型
  944          //-------------------------------------------------------------------------------------------------------
             -------------
  945          void ips114_showint16(uint16 x,uint16 y,int16 dat)
  946          {
  947   1        uint8 a[5];
  948   1        uint8 i;
  949   1        if(dat<0)
  950   1        {
  951   2          ips114_showchar(x,y*16,'-');
  952   2          dat = -dat;
  953   2        }
  954   1        else  ips114_showchar(x,y*16,' ');
  955   1      
  956   1        a[0] = dat/10000;
  957   1        a[1] = dat/1000%10;
  958   1        a[2] = dat/100%10;
  959   1        a[3] = dat/10%10;
  960   1        a[4] = dat%10;
  961   1        
  962   1        i = 0;
  963   1        while(i<5)
  964   1        {
  965   2          ips114_showchar((uint16)(x+(8*(i+1))), (uint16)(y*16),(int8)('0' + a[i]));
  966   2          i++;
  967   2        }
  968   1      }
  969          
  970          //-------------------------------------------------------------------------------------------------------
             -------------
  971          //  @brief      液晶显示16位无符号
  972          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
  973          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
  974          //  @param      dat             需要显示的变量，数据类型uint16
  975          //  @return     void
  976          //  @since      v1.0
  977          //  Sample usage:               ips114_showuint16(0,0,x);//x为uint16类型
  978          //-------------------------------------------------------------------------------------------------------
             -------------
  979          void ips114_showuint16(uint16 x,uint16 y,uint16 dat)
  980          {
  981   1        uint8 a[5];
  982   1        uint8 i;
  983   1      
  984   1        a[0] = dat/10000;
  985   1        a[1] = dat/1000%10;
  986   1        a[2] = dat/100%10;
  987   1        a[3] = dat/10%10;
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 17  

  988   1        a[4] = dat%10;
  989   1        
  990   1        i = 0;
  991   1        while(i<5)
  992   1        {
  993   2          ips114_showchar((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  994   2          i++;
  995   2        }
  996   1      }
  997          
  998          //-------------------------------------------------------------------------------------------------------
             -------------
  999          //  @brief      液晶显示32位有符号(去除整数部分无效的0)
 1000          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 1001          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 1002          //  @param      dat             需要显示的变量，数据类型uint32
 1003          //  @param      num             需要显示的位数 最高10位  不包含正负号
 1004          //  @return     void
 1005          //  @since      v1.0
 1006          //  Sample usage:               ips114_showuint32(0,0,x,3);//x可以为int32 uint16 int16 uint8 int8类型
 1007          //  Sample usage:               负数会显示一个 ‘-’号   正数显示一个空格
 1008          //-------------------------------------------------------------------------------------------------------
             -------------
 1009          void ips114_showint32(uint16 x,uint16 y,int32 dat,uint8 num)
 1010          {
 1011   1          int8    buff[34];
 1012   1          uint8   length;
 1013   1          
 1014   1          if(10<num)      num = 10;
 1015   1          
 1016   1          num++;
 1017   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
 1018   1          else
 1019   1          {
 1020   2              buff[0] = ' ';
 1021   2              length = zf_sprintf( &buff[1],"%d",dat);
 1022   2              length++;
 1023   2          }
 1024   1          while(length < num)
 1025   1          {
 1026   2              buff[length] = ' ';
 1027   2              length++;
 1028   2          }
 1029   1          buff[num] = '\0';
 1030   1      
 1031   1          ips114_showstr(x, y, buff); //显示数字
 1032   1      }
 1033          
 1034          
 1035          //-------------------------------------------------------------------------------------------------------
             -------------
 1036          //  @brief      液晶显示浮点数(去除整数部分无效的0)
 1037          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 1038          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 1039          //  @param      dat             需要显示的变量，数据类型float或double
 1040          //  @param      num             整数位显示长度   最高10位  
 1041          //  @param      pointnum        小数位显示长度   最高6位
 1042          //  @return     void
 1043          //  @since      v1.0
 1044          //  Sample usage:               ips114_showfloat(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
 1045          //  @note                       特别注意当发现小数部分显示的值与你写入的值不一样的时候，
 1046          //                              可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
 1047          //                              有关问题的详情，请自行百度学习   浮点数精度丢失问题。
 1048          //                              负数会显示一个 ‘-’号   正数显示一个空格
 1049          //-------------------------------------------------------------------------------------------------------
             -------------
C251 COMPILER V5.60.0,  SEEKFREE_IPS114_SPI                                                16/03/22  15:38:02  PAGE 18  

 1050          void ips114_showfloat(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
 1051          {
 1052   1          uint8   length;
 1053   1        int8    buff[34];
 1054   1        int8    start,end,point;
 1055   1      
 1056   1        if(6<pointnum)  pointnum = 6;
 1057   1          if(10<num)      num = 10;
 1058   1              
 1059   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
 1060   1          else
 1061   1          {
 1062   2              length = zf_sprintf( &buff[1],"%f",dat);
 1063   2              length++;
 1064   2          }
 1065   1          point = length - 7;         //计算小数点位置
 1066   1          start = point - num - 1;    //计算起始位
 1067   1          end = point + pointnum + 1; //计算结束位
 1068   1          while(0>start)//整数位不够  末尾应该填充空格
 1069   1          {
 1070   2              buff[end] = ' ';
 1071   2              end++;
 1072   2              start++;
 1073   2          }
 1074   1          
 1075   1          if(0>dat)   buff[start] = '-';
 1076   1          else        buff[start] = ' ';
 1077   1          
 1078   1          buff[end] = '\0';
 1079   1      
 1080   1          ips114_showstr(x, y, buff); //显示数字
 1081   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      3695     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------        246
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         6     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
